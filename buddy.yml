- pipeline: "Build and sign APK - Buddy"
  on: "CLICK"
  refs:
  - "refs/heads/*"
  fail_on_prepare_env_warning: true
  actions:
  - action: "build apk - gradle"
    type: "BUILD"
    docker_image_name: "library/openjdk"
    docker_image_tag: "20"
    execute_commands:
    - "export ANDROID_HOME=\"/opt/android/sdk\""
    - "export PATH=$PATH:/opt/android/sdk/cmdline-tools/tools/bin"
    - "if [ ! -d \"$ANDROID_HOME/cmdline-tools\" ]; then"
    - " curl -o sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip"
    - " unzip sdk.zip"
    - " rm sdk.zip"
    - " mkdir \"$ANDROID_HOME/cmdline-tools\""
    - " mv cmdline-tools \"$ANDROID_HOME/cmdline-tools/tools\""
    - " yes | \"$ANDROID_HOME/cmdline-tools/tools/bin/sdkmanager\" --licenses"
    - "fi"
    - "cd pure-android"
    - "chmod +x gradlew"
    - "#./gradlew assembleDebug"
    - "./gradlew assembleRelease"
    setup_commands:
    - "microdnf install unzip"
    cached_dirs:
    - "/root/.gradle"
    - "/opt/android/sdk"
    shell: "BASH"
  - action: "sign apk - apksigner"
    type: "ANDROID_SIGN"
    local_path: "pure-android/app/build/outputs/apk/release/app-release-unsigned.apk"
    application_name: "signed-app.apk"
    key_path: "keystore.jks"
    key_password: "secure!R4AuzObkG1NyByt1gEzvMA==.KXe8nfDbNKRXSGZh1Tvi9Q=="
    keystore_password: "secure!R4AuzObkG1NyByt1gEzvMA==.KXe8nfDbNKRXSGZh1Tvi9Q=="
    key_alias: "mykey"
    build_tool_version: "31.0.0"
- pipeline: "Build and sign APK - Fastlane"
  on: "CLICK"
  refs:
  - "refs/heads/*"
  fail_on_prepare_env_warning: true
  actions:
  - action: "run fastlane"
    type: "FASTLANE_ANDROID"
    execute_commands:
    - "export ANDROID_HOME=\"/opt/android/sdk\""
    - "export PATH=$PATH:/opt/android/sdk/cmdline-tools/tools/bin"
    - "if [ ! -d \"$ANDROID_HOME/cmdline-tools\" ]; then"
    - " curl -o sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip"
    - " unzip -o sdk.zip"
    - " rm sdk.zip"
    - " mkdir -p \"$ANDROID_HOME/cmdline-tools\""
    - " mv cmdline-tools \"$ANDROID_HOME/cmdline-tools/tools\""
    - " yes | \"$ANDROID_HOME/cmdline-tools/tools/bin/sdkmanager\" --licenses"
    - "fi"
    - "bundle update --all"
    - "bundle exec fastlane build_apk"
    setup_commands:
    - "apt update && apt install -y openjdk-17-jdk wget unzip"
    - ""
    build_tool_version: "2.219.0"
    shell: "BASH"
- pipeline: "Build, sign and publish AAB - Buddy"
  on: "CLICK"
  refs:
  - "refs/heads/*"
  fail_on_prepare_env_warning: true
  actions:
  - action: "build aab - gradle"
    type: "BUILD"
    docker_image_name: "library/openjdk"
    docker_image_tag: "20"
    execute_commands:
    - "export ANDROID_HOME=\"/opt/android/sdk\""
    - "export PATH=$PATH:/opt/android/sdk/cmdline-tools/tools/bin"
    - "if [ ! -d \"$ANDROID_HOME/cmdline-tools\" ]; then"
    - " curl -o sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip"
    - " unzip sdk.zip"
    - " rm sdk.zip"
    - " mkdir \"$ANDROID_HOME/cmdline-tools\""
    - " mv cmdline-tools \"$ANDROID_HOME/cmdline-tools/tools\""
    - " yes | \"$ANDROID_HOME/cmdline-tools/tools/bin/sdkmanager\" --licenses"
    - "fi"
    - "cd pure-android"
    - "chmod +x gradlew"
    - "#./gradlew assembleDebug"
    - "./gradlew bundleRelease"
    setup_commands:
    - "microdnf install unzip"
    cached_dirs:
    - "/root/.gradle"
    - "/opt/android/sdk"
    shell: "BASH"
  - action: "sign aab - jarsigner"
    type: "ANDROID_SIGN_BUNDLE"
    local_path: "pure-android/app/build/outputs/bundle/release/app-release.aab"
    application_name: "app-release-signed.aab"
    key_path: "keystore.jks"
    key_password: "secure!R4AuzObkG1NyByt1gEzvMA==.KXe8nfDbNKRXSGZh1Tvi9Q=="
    keystore_password: "secure!R4AuzObkG1NyByt1gEzvMA==.KXe8nfDbNKRXSGZh1Tvi9Q=="
    key_alias: "mykey"
  - action: "publish aab - google play"
    type: "ANDROID_PUBLISH_APP_BUNDLE"
    application_id: "com.heyworld.helloworld"
    integration: "Google_Play_Store"
    track: "internal"
    draft: true
    apk_files:
    - apk_path: "/app-release-signed (3).aab"
      main_expansion_path: ""
      patch_expansion_path: ""
- pipeline: "Build sign and publish AAB - Fastlane"
  on: "CLICK"
  refs:
  - "refs/heads/*"
  fail_on_prepare_env_warning: true
  actions:
  - action: "run fastlane"
    type: "FASTLANE_ANDROID"
    execute_commands:
    - "export ANDROID_HOME=\"/opt/android/sdk\""
    - "export PATH=$PATH:/opt/android/sdk/cmdline-tools/tools/bin"
    - "if [ ! -d \"$ANDROID_HOME/cmdline-tools\" ]; then"
    - " curl -o sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip"
    - " unzip -o sdk.zip"
    - " rm sdk.zip"
    - " mkdir -p \"$ANDROID_HOME/cmdline-tools\""
    - " mv cmdline-tools \"$ANDROID_HOME/cmdline-tools/tools\""
    - " yes | \"$ANDROID_HOME/cmdline-tools/tools/bin/sdkmanager\" --licenses"
    - "fi"
    - "bundle update --all"
    - "bundle exec fastlane build_aab"
    setup_commands:
    - "apt update && apt install -y openjdk-17-jdk wget unzip"
    - ""
    build_tool_version: "2.219.0"
    shell: "BASH"
